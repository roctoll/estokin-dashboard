<?php

namespace Estokin\PanelBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * OrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrderRepository extends EntityRepository
{

	/**
	 * Gets orders by user and state.
	 *
	 * @param string $shop
	 *
	 * @return integer
	 */
	public function getNumSold($shop)
	{
		$q = $this->createQueryBuilder('p')
		->select('count(p.id)')
		->where('p.shop = :shop', 'p.state = :state')
		->setParameter('shop', $shop)
		->setParameter('state', 'STATE_SOLD');
		return current($q->getQuery()->getSingleResult()); 
	}
	/**
	 * Gets orders by state.
	 *
	 * @return integer
	 */
	public function getNumSoldA()
	{
		$q = $this->createQueryBuilder('p')
		->select('count(p.id)')
		->where('p.state = :state')
		->setParameter('state', 'STATE_SOLD');
		return current($q->getQuery()->getSingleResult()); 
	}
	
	/**
	 * Gets num orders by user.
	 *
	 * @param string $shop
	 *
	 * @return integer
	 */
	public function getNumTotal($shop)
	{
		$q = $this->createQueryBuilder('p')
		->select('count(p.id)')
		->where('p.shop = :shop')
		->setParameter('shop', $shop);
		return current($q->getQuery()->getSingleResult()); 
	}
	/**
	 * Gets num orders.
	 *
	 * @return integer
	 */
	public function getNumTotalA()
	{
		$q = $this->createQueryBuilder('p')
		->select('count(p.id)');
		return current($q->getQuery()->getSingleResult()); 
	}
	/**
	 * Gets last order by PS_id.
	 *
	 * @return integer
	 */
	public function getLastPSOrder()
	{
		$q = $this->createQueryBuilder('o')
		->select('MAX(o.PS_id)');
		return current($q->getQuery()->getSingleResult());
	}
}